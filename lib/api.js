"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Api=void 0;const errors_1=require("./errors"),http_1=require("./http"),logger_1=require("./logger"),request_1=require("./request"),response_1=require("./response"),router_1=require("./router");class Api{constructor(t={}){this.options=t,this.routes=[],this.middlewares=[],this.log=logger_1.Logger.create()}use(t){for(const e of t)"function"==typeof e?this.middlewares.push(e):this.routes.push(e);return this}finally(t){"function"==typeof t&&(this.middlewareFinally=t)}async listen(t,e){var r;const s=new request_1.ApiRequest(t,e),o={context:e},i=(null===(r=this.options.logger)||void 0===r?void 0:r.trace)||!1;void 0!==this.options.logger&&(o.pretty=this.options.logger.pretty||void 0,o.handler=this.options.logger.handler||void 0),logger_1.Logger.configure(o),i&&this.trace("REQUEST","request",s.toRequest());try{if(!this.routes.length)throw new errors_1.RouteError(s.path);const t=this.routes.filter((t=>t.method===s.method));if(0===t.length)throw new errors_1.MethodError(s.method,s.path);const e=this.matchRoute(t,s.path);if(!e)throw new errors_1.RouteError(s.path);const r=new response_1.ApiResponse(s),[o,a]=e;s.params=a,await this.executeMiddlewares(s,r);const n=await o.handler(s,r),h=r.toResponse();this.middlewareFinally&&await this.middlewareFinally(s,r);const p=h||r.send(n);return i&&this.trace("RESPONSE","response",p),p}catch(t){const[e,r]=this.handleErrors(t,s);return i&&this.trace("ERROR","error",r),e}}trace(t,e,r){this.log.clearExtras(),this.log.addExtra(e,r),this.log.trace(t)}async executeMiddlewares(t,e){for(let r=0;r<this.middlewares.length;r++){const s=this.middlewares[r];await s(t,e)}}matchRoute(t,e){for(const r of t){const t=router_1.getRouteParams(r.path,e);if(t)return[r,t]}}handleErrors(t,e){let r=http_1.HttpStatus.INTERNAL_SERVER_ERROR;const s=new response_1.ApiResponse(e),o={code:errors_1.ApiError.GENERIC_ERROR,message:t.message||"",status:r};return t instanceof errors_1.HttpError&&(o.code=t.code,t instanceof errors_1.MethodError?(r=http_1.HttpStatus.METHOD_NOT_ALLOWED,o.status=r,o.data={method:t.method,path:t.path}):t instanceof errors_1.RouteError&&(r=http_1.HttpStatus.NOT_FOUND,o.status=r,o.data={path:t.path})),[s.status(r).error(o),o]}}exports.Api=Api;