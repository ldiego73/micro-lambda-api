"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Api=void 0;const errors_1=require("./errors"),http_1=require("./http"),request_1=require("./request"),response_1=require("./response"),router_1=require("./router");class Api{constructor(){this.routes=[],this.middlewares=[]}use(t){for(const e of t)"function"==typeof e?this.middlewares.push(e):this.routes.push(e);return this}finally(t){this.middlewareFinally=t}async listen(t,e){const r=new request_1.ApiRequest(t,e);try{if(!this.routes.length)throw new errors_1.RouteError(r.path);const t=this.routes.filter((t=>t.method===r.method));if(0===t.length)throw new errors_1.MethodError(r.method,r.path);const e=this.matchRoute(t,r.path);if(!e)throw new errors_1.RouteError(r.path);const s=new response_1.ApiResponse(r),[o,a]=e;r.params=a,await this.executeMiddlewares(r,s);const i=await o.handler(r,s),n=s.getResponse();return this.middlewareFinally&&await this.middlewareFinally(r,s),n||s.send(i)}catch(t){return this.handleErrors(t,r)}}async executeMiddlewares(t,e){for(let r=0;r<this.middlewares.length;r++){const s=this.middlewares[r];await s(t,e)}}matchRoute(t,e){for(const r of t){const t=router_1.getRouteParams(r.path,e);if(t)return[r,t]}}handleErrors(t,e){let r=http_1.HttpStatus.INTERNAL_SERVER_ERROR;const s=new response_1.ApiResponse(e),o={code:errors_1.ApiError.GENERIC_ERROR,message:t.message||"",status:r};return t instanceof errors_1.HttpError&&(o.code=t.code,t instanceof errors_1.MethodError?(r=http_1.HttpStatus.METHOD_NOT_ALLOWED,o.status=r,o.data={method:t.method,path:t.path}):t instanceof errors_1.RouteError&&(r=http_1.HttpStatus.NOT_FOUND,o.status=r,o.data={path:t.path})),s.status(r).error(o)}}exports.Api=Api;